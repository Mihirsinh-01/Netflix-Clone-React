{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","require","create","baseURL","Row","title","fetchUrl","large","useState","movies","setMovies","trailerUrl","setUrl","useEffect","a","axios","get","request","data","results","console","log","fetchData","className","map","movie","onClick","movieTrailer","name","then","url","param","URLSearchParams","URL","search","catch","error","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","setMovie","req","x","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30369e6f.chunk.js","sourcesContent":["const axios = require('axios')\r\nconst instance = axios.create({\r\n    baseURL:\"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;","import React, {useState,useEffect} from 'react'\r\nimport axios from './axios'\r\nimport './Row.css'\r\nimport Youtube from 'react-youtube'\r\nimport movieTrailer from 'movie-trailer'\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\n\r\nfunction Row({title,fetchUrl,large}) {\r\n    const [movies, setMovies] = useState([]);\r\n    const [trailerUrl, setUrl] = useState(\"\");\r\n    useEffect(()=>{\r\n        async function fetchData(){\r\n            const request=await axios.get(fetchUrl);\r\n            setMovies(request.data.results);\r\n            console.log(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n\r\n    }, [fetchUrl]);\r\n    \r\n    const opts = {\r\n        height:\"390\",\r\n        width:\"100%\",\r\n        playerVars: {\r\n            autoplay: 1,\r\n        },\r\n    };\r\n\r\n    const handleClick = (movie) => {\r\n        if (trailerUrl) {\r\n            setUrl('');\r\n        }\r\n        else {\r\n            movieTrailer(movie?.name || \"\")\r\n                .then(url => {\r\n                    const param = new URLSearchParams(new URL(url).search);\r\n                    setUrl(param.get(\"v\"));\r\n                })\r\n                .catch((error) => console.log(error));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h2>{title}</h2>\r\n            <div className=\"row__posters\">\r\n                {\r\n                    movies.map(movie => (\r\n                        <img\r\n                            onClick={() =>handleClick(movie)}\r\n                            key={movie.id}\r\n                            className={`row__poster ${large && \"row__posterlarge\"}`}\r\n                            src={`${base_url}${large?movie.poster_path:movie.backdrop_path}`}\r\n                            alt={movie.name} />\r\n                    ))}\r\n            </div>\r\n            {trailerUrl && <Youtube videoId={trailerUrl} opts={opts}></Youtube>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row;\r\n\r\n","const API_KEY=\"b349f0f8470a802354878a5c9be016ef\";\r\n\r\nconst requests={\r\n    fetchTrending:`/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals:`/discover/tv?api_key=${API_KEY}&with_network=213`,\r\n    fetchTopRated:`/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies:`/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n\tfetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n\tfetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n\tfetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n}\r\n\r\nexport default requests;","import React, { useEffect, useState } from 'react'\r\nimport axios from './axios'\r\nimport requests from './requests'\r\nimport './Banner.css'\r\n\r\nfunction Banner() {\r\n    const [movie, setMovie] = useState([]);\r\n    useEffect(() => {\r\n        async function fetchData(){\r\n            const req = await axios.get(requests.fetchNetflixOriginals);\r\n            var x = Math.floor(Math.random() * req.data.results.length - 1);\r\n            setMovie(req.data.results[x]);\r\n            return req;\r\n        }\r\n        fetchData();\r\n    },[])\r\n    return (\r\n        <header\r\n            className=\"banner\"\r\n            style={{\r\n                backgroundSize: \"cover\",\r\n                backgroundImage:`url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n                backgroundPosition:\"center\",\r\n            }}\r\n        >\r\n            <div className=\"banner_contents\">\r\n                <h1 className=\"banner_title\">{movie?.title || movie?.name || movie?.original_name}</h1>\r\n                <div className=\"banner_buttons\">\r\n                    <button className=\"banner_button\">\r\n                        Play\r\n                    </button>\r\n                    <button className=\"banner_button\">\r\n                        My List\r\n                    </button>\r\n                </div>\r\n                <h1 className=\"banner_des\">\r\n                    {movie?.overview}\r\n                </h1>\r\n            </div>\r\n            <div className=\"banner--fadeBottom\"> </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React, {useState,useEffect} from 'react'\r\nimport './Nav.css'\r\n\r\nfunction Nav() {\r\n\r\n    const [show,handleShow] = useState(false);\r\n\t\r\n\tuseEffect(()=>{\r\n\t\twindow.addEventListener(\"scroll\",()=> {\r\n\t\t\tif(window.scrollY > 100) { \r\n\t\t\t\thandleShow(true);\r\n\t\t\t}else handleShow(false);\t\r\n\t\t});\r\n\t\treturn () => {\r\n\t\t\tconst _fnEmptyFunctionPointer = ()=>{};\r\n\t\t\twindow.removeEventListener(\"scroll\", _fnEmptyFunctionPointer);\r\n\t\t};\r\n    }, []);\r\n    \r\n    return (\r\n        <div className={`nav ${show && \"blacknav\"}`}>\r\n            <img className=\"logo\"\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1198px-Netflix_2015_logo.svg.png\"\r\n                alt=\"Netflix Logo\"\r\n            />\r\n            <img className=\"avatar\"\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\r\n                alt=\"Netflix Avatar\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import './App.css';\nimport Row from './Row'\nimport requests from './requests.js'\nimport Banner from './Banner'\nimport Nav from './Nav'\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Nav />\n      <Banner />\n      <Row title=\"NETFLIX ORIGINALS\" fetchUrl={requests.fetchNetflixOriginals} large/>\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row title=\"Documentary\" fetchUrl={requests.fetchDocumentaries} />      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}